{"version":3,"sources":["redux/contacts/contacts-actions.js","redux/contacts/contacts-reduser.js","redux/store.js","components/ContactsForm/ContactsForm.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App.js","index.js"],"names":["saveContact","createAction","name","number","payload","id","shortid","generate","removeContact","changeFilter","contactsReducer","createReducer","items","filter","contactsActions","state","some","contact","alert","length","rootReducer","combineReducers","contacts","store","createStore","composeWithDevTools","ContactsForm","handleChange","target","value","setState","handleSubmit","event","onContact","props","preventDefault","resetForm","this","onSubmit","type","className","placeholder","onChange","Component","connect","dispatch","ContactListItem","onRemove","onClick","getVisibleContacts","allContacts","normalizedFilter","toLowerCase","includes","onRemoveContact","onToggleCompleted","map","key","handleFilter","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75827767.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\nimport shortid from 'shortid';\n\nconst saveContact = createAction('contacts/save', ({ name, number }) => ({\n  payload: {\n    id: shortid.generate(),\n    name,\n    number,\n  },\n}));\n\nconst removeContact = createAction('contacts/remove');\nconst changeFilter = createAction('contacts/changeFilter');\n\nexport default { saveContact, removeContact, changeFilter };\n","import { createReducer } from '@reduxjs/toolkit';\nimport contactsActions from './contacts-actions';\n\nconst initialState = {\n  items: [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ],\n  filter: '',\n};\n\nconst contactsReducer = createReducer(initialState, {\n  [contactsActions.saveContact]: (state, { payload }) => {\n    const isAlreadyInContacts = state.items.some(\n      contact => contact.name === payload.name,\n    );\n    if (isAlreadyInContacts) {\n      alert(`${payload.name} is already in contacts`);\n      return state;\n    }\n    if (!payload.name || !payload.number) {\n      alert('Fill in all the fields');\n      return state;\n    }\n\n    return {\n      ...state,\n      items: [...state.items, payload],\n    };\n  },\n\n  [contactsActions.removeContact]: (state, { payload }) => {\n    const items = state.items.filter(({ id }) => id !== payload);\n    return items.length === 1\n      ? {\n          items: items,\n          filter: '',\n        }\n      : {\n          items: items,\n          filter: state.filter,\n        };\n  },\n\n  [contactsActions.changeFilter]: (state, { payload }) => {\n    return {\n      ...state,\n      filter: payload,\n    };\n  },\n});\nexport default contactsReducer;\n","import { createStore, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport contactsReducer from './contacts/contacts-reduser';\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n});\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;\n","import React, { Component } from 'react';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport './ContactsForm.css';\n\nimport contactsActions from '../../redux/contacts/contacts-actions';\n\nclass ContactsForm extends Component {\n  static propTypes = {\n    onContact: propTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    const { onContact } = this.props;\n\n    event.preventDefault();\n    onContact(this.state);\n    this.resetForm();\n  };\n\n  resetForm() {\n    this.setState({ name: '', number: '' });\n  }\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div>\n          <label>\n            Name\n            <input\n              type=\"text\"\n              className=\"input\"\n              placeholder=\"Enter name\"\n              value={name}\n              name=\"name\"\n              onChange={this.handleChange}\n            />\n          </label>\n        </div>\n        <div>\n          <label>\n            Number\n            <input\n              type=\"text\"\n              className=\"input\"\n              placeholder=\"Enter number\"\n              value={number}\n              name=\"number\"\n              onChange={this.handleChange}\n            />\n          </label>\n        </div>\n\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onContact: contact => dispatch(contactsActions.saveContact(contact)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactsForm);\n","import React from 'react';\nimport propTypes from 'prop-types';\n\nconst ContactListItem = ({ name, number, onRemove }) => (\n  <li className=\"listContacts\">\n    <span className=\"list\">{name}</span>\n    <span className=\"list\"> {number}</span>\n    <button className=\"list\" type=\"button\" onClick={onRemove}>\n      Delete\n    </button>\n  </li>\n);\n\nContactListItem.propTypes = {\n  name: propTypes.string.isRequired,\n  number: propTypes.string.isRequired,\n  onRemove: propTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport ContactListItem from './ContactListItem';\nimport contactsActions from '../../redux/contacts/contacts-actions';\n\nimport './Contact.css';\n\nconst ContactList = ({ contacts, onRemoveContact }) => (\n  <ul className=\"contextListContacts\">\n    <header className=\"listContacts\">\n      <span className=\"headerList\">name</span>\n      <span className=\"headerList\">telephone</span>\n      <span className=\"headerList\">action</span>\n    </header>\n\n    {contacts.map(({ id, name, number }) => (\n      <ContactListItem\n        key={id}\n        name={name}\n        number={number}\n        onRemove={() => onRemoveContact(id)}\n      />\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: propTypes.oneOfType([\n    propTypes.arrayOf(\n      propTypes.exact({\n        id: propTypes.string.isRequired,\n        name: propTypes.string.isRequired,\n        number: propTypes.number.isRequired,\n      }),\n    ),\n    propTypes.array,\n  ]),\n  onRemoveContact: propTypes.func.isRequired,\n};\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return allContacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: getVisibleContacts(items, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onRemoveContact: id => dispatch(contactsActions.removeContact(id)),\n  onToggleCompleted: () => null,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-actions';\n\nconst Filter = ({ value, handleFilter }) => (\n  <div>\n    <label>\n      Find contacts by name\n      <input\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Enter name\"\n        value={value}\n        name=\"filter\"\n        onChange={handleFilter}\n      />\n    </label>\n  </div>\n);\n\nFilter.propTypes = {\n  value: propTypes.string.isRequired,\n  handleFilter: propTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  handleFilter: event =>\n    dispatch(contactsActions.changeFilter(event.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { Component } from 'react';\nimport ContactsForm from './ContactsForm';\nimport ContactList from './ContactList';\nimport Filter from './Filter';\n\nimport '../../node_modules/modern-normalize/modern-normalize.css';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactsForm />\n        <h2>Contact</h2>\n\n        <Filter />\n\n        <ContactList />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}